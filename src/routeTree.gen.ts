/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as frontFacingRouteRouteImport } from './routes/(front-facing)/route'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as frontFacingIndexRouteImport } from './routes/(front-facing)/index'
import { Route as frontFacingPricingRouteImport } from './routes/(front-facing)/pricing'
import { Route as frontFacingFeaturesRouteImport } from './routes/(front-facing)/features'
import { Route as frontFacingAboutRouteImport } from './routes/(front-facing)/about'
import { Route as DashboardOrganizationSettingsRouteRouteImport } from './routes/dashboard/organization-settings/route'
import { Route as DashboardOrganizationSettingsIndexRouteImport } from './routes/dashboard/organization-settings/index'
import { Route as DashboardLinkTwoIndexRouteImport } from './routes/dashboard/link-two/index'
import { Route as DashboardLinkThreeIndexRouteImport } from './routes/dashboard/link-three/index'
import { Route as DashboardLinkFourIndexRouteImport } from './routes/dashboard/link-four/index'
import { Route as DashboardLinkFiveIndexRouteImport } from './routes/dashboard/link-five/index'
import { Route as DashboardTheThingIndexRouteImport } from './routes/dashboard/The Thing/index'
import { Route as DashboardOrganizationSettingsTeamRouteImport } from './routes/dashboard/organization-settings/team'
import { Route as DashboardOrganizationSettingsIntegrationsRouteImport } from './routes/dashboard/organization-settings/integrations'
import { Route as DashboardOrganizationSettingsBillingRouteImport } from './routes/dashboard/organization-settings/billing'
import { Route as DashboardOrganizationSettingsApiKeysRouteImport } from './routes/dashboard/organization-settings/api-keys'
import { Route as frontFacingDemoTanstackQueryRouteImport } from './routes/(front-facing)/demo.tanstack-query'
import { Route as DashboardOrganizationSettingsBillingNestedTestRouteImport } from './routes/dashboard/organization-settings/billing.nested-test'
import { Route as DashboardOrganizationSettingsBillingNestedTestDeepRouteImport } from './routes/dashboard/organization-settings/billing.nested-test.deep'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const frontFacingRouteRoute = frontFacingRouteRouteImport.update({
  id: '/(front-facing)',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const frontFacingIndexRoute = frontFacingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => frontFacingRouteRoute,
} as any)
const frontFacingPricingRoute = frontFacingPricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => frontFacingRouteRoute,
} as any)
const frontFacingFeaturesRoute = frontFacingFeaturesRouteImport.update({
  id: '/features',
  path: '/features',
  getParentRoute: () => frontFacingRouteRoute,
} as any)
const frontFacingAboutRoute = frontFacingAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => frontFacingRouteRoute,
} as any)
const DashboardOrganizationSettingsRouteRoute =
  DashboardOrganizationSettingsRouteRouteImport.update({
    id: '/organization-settings',
    path: '/organization-settings',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardOrganizationSettingsIndexRoute =
  DashboardOrganizationSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardOrganizationSettingsRouteRoute,
  } as any)
const DashboardLinkTwoIndexRoute = DashboardLinkTwoIndexRouteImport.update({
  id: '/link-two/',
  path: '/link-two/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardLinkThreeIndexRoute = DashboardLinkThreeIndexRouteImport.update({
  id: '/link-three/',
  path: '/link-three/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardLinkFourIndexRoute = DashboardLinkFourIndexRouteImport.update({
  id: '/link-four/',
  path: '/link-four/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardLinkFiveIndexRoute = DashboardLinkFiveIndexRouteImport.update({
  id: '/link-five/',
  path: '/link-five/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardTheThingIndexRoute = DashboardTheThingIndexRouteImport.update({
  id: '/The Thing/',
  path: '/The Thing/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardOrganizationSettingsTeamRoute =
  DashboardOrganizationSettingsTeamRouteImport.update({
    id: '/team',
    path: '/team',
    getParentRoute: () => DashboardOrganizationSettingsRouteRoute,
  } as any)
const DashboardOrganizationSettingsIntegrationsRoute =
  DashboardOrganizationSettingsIntegrationsRouteImport.update({
    id: '/integrations',
    path: '/integrations',
    getParentRoute: () => DashboardOrganizationSettingsRouteRoute,
  } as any)
const DashboardOrganizationSettingsBillingRoute =
  DashboardOrganizationSettingsBillingRouteImport.update({
    id: '/billing',
    path: '/billing',
    getParentRoute: () => DashboardOrganizationSettingsRouteRoute,
  } as any)
const DashboardOrganizationSettingsApiKeysRoute =
  DashboardOrganizationSettingsApiKeysRouteImport.update({
    id: '/api-keys',
    path: '/api-keys',
    getParentRoute: () => DashboardOrganizationSettingsRouteRoute,
  } as any)
const frontFacingDemoTanstackQueryRoute =
  frontFacingDemoTanstackQueryRouteImport.update({
    id: '/demo/tanstack-query',
    path: '/demo/tanstack-query',
    getParentRoute: () => frontFacingRouteRoute,
  } as any)
const DashboardOrganizationSettingsBillingNestedTestRoute =
  DashboardOrganizationSettingsBillingNestedTestRouteImport.update({
    id: '/nested-test',
    path: '/nested-test',
    getParentRoute: () => DashboardOrganizationSettingsBillingRoute,
  } as any)
const DashboardOrganizationSettingsBillingNestedTestDeepRoute =
  DashboardOrganizationSettingsBillingNestedTestDeepRouteImport.update({
    id: '/deep',
    path: '/deep',
    getParentRoute: () => DashboardOrganizationSettingsBillingNestedTestRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof frontFacingIndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/organization-settings': typeof DashboardOrganizationSettingsRouteRouteWithChildren
  '/about': typeof frontFacingAboutRoute
  '/features': typeof frontFacingFeaturesRoute
  '/pricing': typeof frontFacingPricingRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/demo/tanstack-query': typeof frontFacingDemoTanstackQueryRoute
  '/dashboard/organization-settings/api-keys': typeof DashboardOrganizationSettingsApiKeysRoute
  '/dashboard/organization-settings/billing': typeof DashboardOrganizationSettingsBillingRouteWithChildren
  '/dashboard/organization-settings/integrations': typeof DashboardOrganizationSettingsIntegrationsRoute
  '/dashboard/organization-settings/team': typeof DashboardOrganizationSettingsTeamRoute
  '/dashboard/The Thing': typeof DashboardTheThingIndexRoute
  '/dashboard/link-five': typeof DashboardLinkFiveIndexRoute
  '/dashboard/link-four': typeof DashboardLinkFourIndexRoute
  '/dashboard/link-three': typeof DashboardLinkThreeIndexRoute
  '/dashboard/link-two': typeof DashboardLinkTwoIndexRoute
  '/dashboard/organization-settings/': typeof DashboardOrganizationSettingsIndexRoute
  '/dashboard/organization-settings/billing/nested-test': typeof DashboardOrganizationSettingsBillingNestedTestRouteWithChildren
  '/dashboard/organization-settings/billing/nested-test/deep': typeof DashboardOrganizationSettingsBillingNestedTestDeepRoute
}
export interface FileRoutesByTo {
  '/about': typeof frontFacingAboutRoute
  '/features': typeof frontFacingFeaturesRoute
  '/pricing': typeof frontFacingPricingRoute
  '/': typeof frontFacingIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/demo/tanstack-query': typeof frontFacingDemoTanstackQueryRoute
  '/dashboard/organization-settings/api-keys': typeof DashboardOrganizationSettingsApiKeysRoute
  '/dashboard/organization-settings/billing': typeof DashboardOrganizationSettingsBillingRouteWithChildren
  '/dashboard/organization-settings/integrations': typeof DashboardOrganizationSettingsIntegrationsRoute
  '/dashboard/organization-settings/team': typeof DashboardOrganizationSettingsTeamRoute
  '/dashboard/The Thing': typeof DashboardTheThingIndexRoute
  '/dashboard/link-five': typeof DashboardLinkFiveIndexRoute
  '/dashboard/link-four': typeof DashboardLinkFourIndexRoute
  '/dashboard/link-three': typeof DashboardLinkThreeIndexRoute
  '/dashboard/link-two': typeof DashboardLinkTwoIndexRoute
  '/dashboard/organization-settings': typeof DashboardOrganizationSettingsIndexRoute
  '/dashboard/organization-settings/billing/nested-test': typeof DashboardOrganizationSettingsBillingNestedTestRouteWithChildren
  '/dashboard/organization-settings/billing/nested-test/deep': typeof DashboardOrganizationSettingsBillingNestedTestDeepRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(front-facing)': typeof frontFacingRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/organization-settings': typeof DashboardOrganizationSettingsRouteRouteWithChildren
  '/(front-facing)/about': typeof frontFacingAboutRoute
  '/(front-facing)/features': typeof frontFacingFeaturesRoute
  '/(front-facing)/pricing': typeof frontFacingPricingRoute
  '/(front-facing)/': typeof frontFacingIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/(front-facing)/demo/tanstack-query': typeof frontFacingDemoTanstackQueryRoute
  '/dashboard/organization-settings/api-keys': typeof DashboardOrganizationSettingsApiKeysRoute
  '/dashboard/organization-settings/billing': typeof DashboardOrganizationSettingsBillingRouteWithChildren
  '/dashboard/organization-settings/integrations': typeof DashboardOrganizationSettingsIntegrationsRoute
  '/dashboard/organization-settings/team': typeof DashboardOrganizationSettingsTeamRoute
  '/dashboard/The Thing/': typeof DashboardTheThingIndexRoute
  '/dashboard/link-five/': typeof DashboardLinkFiveIndexRoute
  '/dashboard/link-four/': typeof DashboardLinkFourIndexRoute
  '/dashboard/link-three/': typeof DashboardLinkThreeIndexRoute
  '/dashboard/link-two/': typeof DashboardLinkTwoIndexRoute
  '/dashboard/organization-settings/': typeof DashboardOrganizationSettingsIndexRoute
  '/dashboard/organization-settings/billing/nested-test': typeof DashboardOrganizationSettingsBillingNestedTestRouteWithChildren
  '/dashboard/organization-settings/billing/nested-test/deep': typeof DashboardOrganizationSettingsBillingNestedTestDeepRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/organization-settings'
    | '/about'
    | '/features'
    | '/pricing'
    | '/dashboard/'
    | '/demo/tanstack-query'
    | '/dashboard/organization-settings/api-keys'
    | '/dashboard/organization-settings/billing'
    | '/dashboard/organization-settings/integrations'
    | '/dashboard/organization-settings/team'
    | '/dashboard/The Thing'
    | '/dashboard/link-five'
    | '/dashboard/link-four'
    | '/dashboard/link-three'
    | '/dashboard/link-two'
    | '/dashboard/organization-settings/'
    | '/dashboard/organization-settings/billing/nested-test'
    | '/dashboard/organization-settings/billing/nested-test/deep'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/features'
    | '/pricing'
    | '/'
    | '/dashboard'
    | '/demo/tanstack-query'
    | '/dashboard/organization-settings/api-keys'
    | '/dashboard/organization-settings/billing'
    | '/dashboard/organization-settings/integrations'
    | '/dashboard/organization-settings/team'
    | '/dashboard/The Thing'
    | '/dashboard/link-five'
    | '/dashboard/link-four'
    | '/dashboard/link-three'
    | '/dashboard/link-two'
    | '/dashboard/organization-settings'
    | '/dashboard/organization-settings/billing/nested-test'
    | '/dashboard/organization-settings/billing/nested-test/deep'
  id:
    | '__root__'
    | '/(front-facing)'
    | '/dashboard'
    | '/dashboard/organization-settings'
    | '/(front-facing)/about'
    | '/(front-facing)/features'
    | '/(front-facing)/pricing'
    | '/(front-facing)/'
    | '/dashboard/'
    | '/(front-facing)/demo/tanstack-query'
    | '/dashboard/organization-settings/api-keys'
    | '/dashboard/organization-settings/billing'
    | '/dashboard/organization-settings/integrations'
    | '/dashboard/organization-settings/team'
    | '/dashboard/The Thing/'
    | '/dashboard/link-five/'
    | '/dashboard/link-four/'
    | '/dashboard/link-three/'
    | '/dashboard/link-two/'
    | '/dashboard/organization-settings/'
    | '/dashboard/organization-settings/billing/nested-test'
    | '/dashboard/organization-settings/billing/nested-test/deep'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  frontFacingRouteRoute: typeof frontFacingRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(front-facing)': {
      id: '/(front-facing)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof frontFacingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/(front-facing)/': {
      id: '/(front-facing)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof frontFacingIndexRouteImport
      parentRoute: typeof frontFacingRouteRoute
    }
    '/(front-facing)/pricing': {
      id: '/(front-facing)/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof frontFacingPricingRouteImport
      parentRoute: typeof frontFacingRouteRoute
    }
    '/(front-facing)/features': {
      id: '/(front-facing)/features'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof frontFacingFeaturesRouteImport
      parentRoute: typeof frontFacingRouteRoute
    }
    '/(front-facing)/about': {
      id: '/(front-facing)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof frontFacingAboutRouteImport
      parentRoute: typeof frontFacingRouteRoute
    }
    '/dashboard/organization-settings': {
      id: '/dashboard/organization-settings'
      path: '/organization-settings'
      fullPath: '/dashboard/organization-settings'
      preLoaderRoute: typeof DashboardOrganizationSettingsRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/organization-settings/': {
      id: '/dashboard/organization-settings/'
      path: '/'
      fullPath: '/dashboard/organization-settings/'
      preLoaderRoute: typeof DashboardOrganizationSettingsIndexRouteImport
      parentRoute: typeof DashboardOrganizationSettingsRouteRoute
    }
    '/dashboard/link-two/': {
      id: '/dashboard/link-two/'
      path: '/link-two'
      fullPath: '/dashboard/link-two'
      preLoaderRoute: typeof DashboardLinkTwoIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/link-three/': {
      id: '/dashboard/link-three/'
      path: '/link-three'
      fullPath: '/dashboard/link-three'
      preLoaderRoute: typeof DashboardLinkThreeIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/link-four/': {
      id: '/dashboard/link-four/'
      path: '/link-four'
      fullPath: '/dashboard/link-four'
      preLoaderRoute: typeof DashboardLinkFourIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/link-five/': {
      id: '/dashboard/link-five/'
      path: '/link-five'
      fullPath: '/dashboard/link-five'
      preLoaderRoute: typeof DashboardLinkFiveIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/The Thing/': {
      id: '/dashboard/The Thing/'
      path: '/The Thing'
      fullPath: '/dashboard/The Thing'
      preLoaderRoute: typeof DashboardTheThingIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/organization-settings/team': {
      id: '/dashboard/organization-settings/team'
      path: '/team'
      fullPath: '/dashboard/organization-settings/team'
      preLoaderRoute: typeof DashboardOrganizationSettingsTeamRouteImport
      parentRoute: typeof DashboardOrganizationSettingsRouteRoute
    }
    '/dashboard/organization-settings/integrations': {
      id: '/dashboard/organization-settings/integrations'
      path: '/integrations'
      fullPath: '/dashboard/organization-settings/integrations'
      preLoaderRoute: typeof DashboardOrganizationSettingsIntegrationsRouteImport
      parentRoute: typeof DashboardOrganizationSettingsRouteRoute
    }
    '/dashboard/organization-settings/billing': {
      id: '/dashboard/organization-settings/billing'
      path: '/billing'
      fullPath: '/dashboard/organization-settings/billing'
      preLoaderRoute: typeof DashboardOrganizationSettingsBillingRouteImport
      parentRoute: typeof DashboardOrganizationSettingsRouteRoute
    }
    '/dashboard/organization-settings/api-keys': {
      id: '/dashboard/organization-settings/api-keys'
      path: '/api-keys'
      fullPath: '/dashboard/organization-settings/api-keys'
      preLoaderRoute: typeof DashboardOrganizationSettingsApiKeysRouteImport
      parentRoute: typeof DashboardOrganizationSettingsRouteRoute
    }
    '/(front-facing)/demo/tanstack-query': {
      id: '/(front-facing)/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof frontFacingDemoTanstackQueryRouteImport
      parentRoute: typeof frontFacingRouteRoute
    }
    '/dashboard/organization-settings/billing/nested-test': {
      id: '/dashboard/organization-settings/billing/nested-test'
      path: '/nested-test'
      fullPath: '/dashboard/organization-settings/billing/nested-test'
      preLoaderRoute: typeof DashboardOrganizationSettingsBillingNestedTestRouteImport
      parentRoute: typeof DashboardOrganizationSettingsBillingRoute
    }
    '/dashboard/organization-settings/billing/nested-test/deep': {
      id: '/dashboard/organization-settings/billing/nested-test/deep'
      path: '/deep'
      fullPath: '/dashboard/organization-settings/billing/nested-test/deep'
      preLoaderRoute: typeof DashboardOrganizationSettingsBillingNestedTestDeepRouteImport
      parentRoute: typeof DashboardOrganizationSettingsBillingNestedTestRoute
    }
  }
}

interface frontFacingRouteRouteChildren {
  frontFacingAboutRoute: typeof frontFacingAboutRoute
  frontFacingFeaturesRoute: typeof frontFacingFeaturesRoute
  frontFacingPricingRoute: typeof frontFacingPricingRoute
  frontFacingIndexRoute: typeof frontFacingIndexRoute
  frontFacingDemoTanstackQueryRoute: typeof frontFacingDemoTanstackQueryRoute
}

const frontFacingRouteRouteChildren: frontFacingRouteRouteChildren = {
  frontFacingAboutRoute: frontFacingAboutRoute,
  frontFacingFeaturesRoute: frontFacingFeaturesRoute,
  frontFacingPricingRoute: frontFacingPricingRoute,
  frontFacingIndexRoute: frontFacingIndexRoute,
  frontFacingDemoTanstackQueryRoute: frontFacingDemoTanstackQueryRoute,
}

const frontFacingRouteRouteWithChildren =
  frontFacingRouteRoute._addFileChildren(frontFacingRouteRouteChildren)

interface DashboardOrganizationSettingsBillingNestedTestRouteChildren {
  DashboardOrganizationSettingsBillingNestedTestDeepRoute: typeof DashboardOrganizationSettingsBillingNestedTestDeepRoute
}

const DashboardOrganizationSettingsBillingNestedTestRouteChildren: DashboardOrganizationSettingsBillingNestedTestRouteChildren =
  {
    DashboardOrganizationSettingsBillingNestedTestDeepRoute:
      DashboardOrganizationSettingsBillingNestedTestDeepRoute,
  }

const DashboardOrganizationSettingsBillingNestedTestRouteWithChildren =
  DashboardOrganizationSettingsBillingNestedTestRoute._addFileChildren(
    DashboardOrganizationSettingsBillingNestedTestRouteChildren,
  )

interface DashboardOrganizationSettingsBillingRouteChildren {
  DashboardOrganizationSettingsBillingNestedTestRoute: typeof DashboardOrganizationSettingsBillingNestedTestRouteWithChildren
}

const DashboardOrganizationSettingsBillingRouteChildren: DashboardOrganizationSettingsBillingRouteChildren =
  {
    DashboardOrganizationSettingsBillingNestedTestRoute:
      DashboardOrganizationSettingsBillingNestedTestRouteWithChildren,
  }

const DashboardOrganizationSettingsBillingRouteWithChildren =
  DashboardOrganizationSettingsBillingRoute._addFileChildren(
    DashboardOrganizationSettingsBillingRouteChildren,
  )

interface DashboardOrganizationSettingsRouteRouteChildren {
  DashboardOrganizationSettingsApiKeysRoute: typeof DashboardOrganizationSettingsApiKeysRoute
  DashboardOrganizationSettingsBillingRoute: typeof DashboardOrganizationSettingsBillingRouteWithChildren
  DashboardOrganizationSettingsIntegrationsRoute: typeof DashboardOrganizationSettingsIntegrationsRoute
  DashboardOrganizationSettingsTeamRoute: typeof DashboardOrganizationSettingsTeamRoute
  DashboardOrganizationSettingsIndexRoute: typeof DashboardOrganizationSettingsIndexRoute
}

const DashboardOrganizationSettingsRouteRouteChildren: DashboardOrganizationSettingsRouteRouteChildren =
  {
    DashboardOrganizationSettingsApiKeysRoute:
      DashboardOrganizationSettingsApiKeysRoute,
    DashboardOrganizationSettingsBillingRoute:
      DashboardOrganizationSettingsBillingRouteWithChildren,
    DashboardOrganizationSettingsIntegrationsRoute:
      DashboardOrganizationSettingsIntegrationsRoute,
    DashboardOrganizationSettingsTeamRoute:
      DashboardOrganizationSettingsTeamRoute,
    DashboardOrganizationSettingsIndexRoute:
      DashboardOrganizationSettingsIndexRoute,
  }

const DashboardOrganizationSettingsRouteRouteWithChildren =
  DashboardOrganizationSettingsRouteRoute._addFileChildren(
    DashboardOrganizationSettingsRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardOrganizationSettingsRouteRoute: typeof DashboardOrganizationSettingsRouteRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardTheThingIndexRoute: typeof DashboardTheThingIndexRoute
  DashboardLinkFiveIndexRoute: typeof DashboardLinkFiveIndexRoute
  DashboardLinkFourIndexRoute: typeof DashboardLinkFourIndexRoute
  DashboardLinkThreeIndexRoute: typeof DashboardLinkThreeIndexRoute
  DashboardLinkTwoIndexRoute: typeof DashboardLinkTwoIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardOrganizationSettingsRouteRoute:
    DashboardOrganizationSettingsRouteRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardTheThingIndexRoute: DashboardTheThingIndexRoute,
  DashboardLinkFiveIndexRoute: DashboardLinkFiveIndexRoute,
  DashboardLinkFourIndexRoute: DashboardLinkFourIndexRoute,
  DashboardLinkThreeIndexRoute: DashboardLinkThreeIndexRoute,
  DashboardLinkTwoIndexRoute: DashboardLinkTwoIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  frontFacingRouteRoute: frontFacingRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
